credentials:
  system:
    domainCredentials:
    - credentials:
      - x509ClientCert:
          clientCertificate: |-
            {CLIENT_CERTIFICATE}
          clientKeySecret: |-
            {CLIENT_KEY}
          description: "credentials for docker in docker"
          id: "docker"
          scope: GLOBAL
          serverCaCertificate: |-
            {SERVER_CERTIFICATE}
      - basicSSHUserPrivateKey:
          description: "docker ssh agent"
          id: "ssh-agent"
          privateKeySource:
            directEntry:
              privateKey: "{SSH_PRIVATE_KEY}"
          scope: GLOBAL
          username: "root"
jenkins:
  authorizationStrategy:
    loggedInUsersCanDoAnything:
      allowAnonymousRead: false
  clouds:
  - docker:
      dockerApi:
        connectTimeout: 60
        dockerHost:
          credentialsId: "docker"
          uri: "tcp://docker.jenkins.net:2376"
        readTimeout: 60
      exposeDockerHost: true
      name: "docker"
  crumbIssuer:
    standard:
      excludeClientIPFromCrumb: false
  disableRememberMe: false
  labelAtoms:
  - name: "built-in"
  - name: "docker"
  - name: "docker agent"
  markupFormatter: "plainText"
  mode: NORMAL
  myViewsTabBar: "standard"
  nodeMonitors:
  - "architecture"
  - "clock"
  - diskSpace:
      freeSpaceThreshold: "1GiB"
      freeSpaceWarningThreshold: "2GiB"
  - "swapSpace"
  - tmpSpace:
      freeSpaceThreshold: "1GiB"
      freeSpaceWarningThreshold: "2GiB"
  - "responseTime"
  nodes:
  - permanent:
      labelString: "docker"
      launcher:
        ssh:
          credentialsId: "ssh-agent"
          host: "agent.jenkins.net"
          port: 22
          sshHostKeyVerificationStrategy: "nonVerifyingKeyVerificationStrategy"
      name: "docker agent"
      remoteFS: "/webhome"
      retentionStrategy: "always"
  numExecutors: 2
  primaryView:
    all:
      name: "all"
  projectNamingStrategy: "standard"
  quietPeriod: 5
  remotingSecurity:
    enabled: true
  scmCheckoutRetryCount: 0
  securityRealm:
    local:
      allowsSignup: false
      enableCaptcha: false
      users:
      - id: "admin"
        name: "Крижановский Александр Владимирович"
        properties:
        - "consoleUrlProvider"
        - "myView"
        - preferredProvider:
            providerId: "default"
        - "timezone"
        - "experimentalFlags"
        - "apiToken"
        - mailer:
            emailAddress: "alex@enot.vc"
  slaveAgentPort: 50000
  updateCenter:
    sites:
    - id: "default"
      url: "https://updates.jenkins.io/update-center.json"
  views:
  - all:
      name: "all"
  viewsTabBar: "standard"
globalCredentialsConfiguration:
  configuration:
    providerFilter: "none"
    typeFilter: "none"
appearance:
  prism:
    theme: PRISM
security:
  apiToken:
    creationOfLegacyTokenEnabled: false
    tokenGenerationOnCreationEnabled: false
    usageStatisticsEnabled: true
  cps:
    hideSandbox: false
  gitHooks:
    allowedOnAgents: false
    allowedOnController: false
  gitHostKeyVerificationConfiguration:
    sshHostKeyVerificationStrategy: "knownHostsFileVerificationStrategy"
  sSHD:
    port: -1
  scriptApproval:
    forceSandbox: false
unclassified:
  artifactoryBuilder:
    jfrogPipelinesServer:
      bypassProxy: false
      connectionRetries: 3
      credentialsConfig:
        overridingCredentials: false
        username: "****"
      timeout: 300
    useCredentialsPlugin: false
  buildDiscarders:
    configuredBuildDiscarders:
    - "jobBuildDiscarder"
  enrichedSummaryConfig:
    enrichedSummaryEnabled: false
    httpClientDelayBetweenRetriesInSeconds: 1
    httpClientMaxRetries: 3
    httpClientTimeoutInSeconds: 1
  fingerprints:
    fingerprintCleanupDisabled: false
    storage: "file"
  injectionConfig:
    allowUntrusted: false
    checkForBuildAgentErrors: false
    enabled: false
    enforceUrl: false
    injectCcudExtension: false
    injectMavenExtension: false
  jFrogPlatformBuilder:
    allowHttpConnections: false
  junitTestResultStorage:
    storage: "file"
  location:
    adminAddress: "адрес еще не настроен <nobody@nowhere>"
    url: "http://localhost:8080/"
  mailer:
    charset: "UTF-8"
    useSsl: false
    useTls: false
  mavenModuleSet:
    localRepository: "default"
  pollSCM:
    pollingThreadCount: 10
  scmGit:
    addGitTagAction: false
    allowSecondFetch: false
    createAccountBasedOnEmail: false
    disableGitToolChooser: false
    hideCredentials: false
    showEntireCommitSummaryInChanges: false
    useExistingAccountWithSameEmail: false
tool:
  dockerTool:
    installations:
    - name: "docker"
  git:
    installations:
    - home: "git"
      name: "Default"
  mavenGlobalConfig:
    globalSettingsProvider: "standard"
    settingsProvider: "standard"
